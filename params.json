{"name":"JReactive-8583","tagline":"ISO8583 Java Connector","body":"# JReactive-8583\r\n\r\nFree ISO8583 Java Connector \r\n\r\n[![Build Status](https://travis-ci.org/kpavlov/jreactive-8583.png?branch=master)](https://travis-ci.org/kpavlov/jreactive-8583) [![Build Status](https://drone.io/github.com/kpavlov/jreactive-8583/status.png)](https://drone.io/github.com/kpavlov/jreactive-8583/latest)\r\n\r\n## Motivation\r\n\r\n1. [jPOS][jpos] library is not free for commercial use. \r\n2. [j8583][j8583] is free but does not offer network client\r\n\r\nSolution: **\"J-Reactive-8583\"** ISO8583 Client and Server built on top of excellent Netty asynchronous messaging framework with the help of j8583. It is distributed under Apache License 2.0.\r\n\r\n## Supported Features\r\n\r\n* Client and Server endpoints.\r\n* Support ISO8583 messages using [j8583][j8583] library.\r\n* Customizable [ISO MessageFactory][j8583-message-factory].\r\n* Automatic responding to Echo messages.\r\n* Automatic client reconnection.\r\n* Secure [message logger](https://github.com/kpavlov/jreactive-8583/blob/master/src/main/java/org/jreactive/iso8583/netty/pipeline/IsoMessageLoggingHandler.java): mask PAN and track data or any any other field (customizable). Optionally prints field descriptions.\r\n * Configurable netty [Bootstrap](https://github.com/netty/netty/blob/master/transport/src/main/java/io/netty/bootstrap/Bootstrap.java) and [ChannelPipeline](https://github.com/netty/netty/blob/master/transport/src/main/java/io/netty/channel/ChannelPipeline.java)\r\n\r\n## ISO8583 TCP/IP Transport\r\n\r\nFor data transmission TCP/IP uses sessions.\r\nEach session is a bi-directional data stream. \r\nThe protocol uses a single TCP/IP session to transfer data between hosts in both directions. \r\n\r\nThe continuous TCP/IP data stream is split into frames. \r\nEach [ISO8583][iso8583] message is sent in a separate frame. \r\n\r\nA Frame consists of a N-byte length header and a message body.\r\nUsually, N==2.\r\nThe header contains the length of the following message.\r\nThe high byte of value is transmitted first, and the low byte of value is transmitted second.\r\n\r\n| N bytes            | M bytes            |\r\n| ------------------ | ------------------ |\r\n| Message Length = M | ISOâ€“8583 Message |\r\n\r\n# Getting Started\r\n\r\nFirst, you need to [download latest release](https://github.com/kpavlov/jreactive-8583/releases) or clone this repository and build artifact with maven manually. \r\n\r\nThen add dependency to your project:\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.jreactive</groupId>\r\n            <artifactId>netty-iso8583</artifactId>\r\n            <version>0.1.1</version>\r\n        </dependency>\r\n        ...\r\n    <dependencies>\r\n    \r\nNow you may use ISO8583 client or server in your code.\r\n\r\n## Creating and Using ISO-8583 Client\r\n\r\nThe minimal client workflow includes:\r\n\r\n    MessageFactory<IsoMessage> messageFactory = ConfigParser.createDefault();// [1]\r\n    Iso8583Client<IsoMessage> client = new Iso8583Client<>(clientMessageFactory());// [2]\r\n\r\n    client.addMessageListener(new IsoMessageListener<IsoMessage>() { // [3]\r\n        ...\r\n    });\r\n    client.getConfiguration().replyOnError(true);// [4]\r\n    client.init();// [5]\r\n    \r\n    client.connect(host, port);// [6]\r\n    if (client.isConnected()) { // [7]\r\n    \r\n        IsoMessage message = messageFactory.newMessage(...);\r\n        ...\r\n        client.send(message);// [8]\r\n    }\r\n    \r\n    ...\r\n    client.shutdown();// [9]\r\n    \r\n1. First you need to create a `MessageFactory`\r\n2. Then you create a [`Iso8583Client`][Iso8583Client] providing `MessageFactory` and, optionally, `SocketAddress` \r\n3. Add one or more custom [`IsoMessageListener`][IsoMessageListener]s to handle `IsoMessage`s.\r\n4. Configure the client. You may omit this step if you're fine with default configuration.\r\n5. Initialize client. Now it is ready to connect.\r\n6. Establish a connection. By default, if connection will is lost, it reconnects automatically. You may disable this behaviour or change _reconnectInterval_.\r\n7. Verify that connection is established\r\n8. Send `IsoMessage`\r\n9. Disconnect when you're done.\r\n\r\n## Creating and Using ISO-8583 Server\r\n\r\nTypical server workflow includes:\r\n\r\n    MessageFactory<IsoMessage> messageFactory = ConfigParser.createDefault();// [1]\r\n    Iso8583Server<IsoMessage> server = new Iso8583Server<>(port, serverMessageFactory());// [2]\r\n\r\n    server.addMessageListener(new IsoMessageListener<IsoMessage>() { // [3]\r\n        ...\r\n    });\r\n    server.getConfiguration().replyOnError(true);// [4]\r\n    server.init();// [5]\r\n    \r\n    server.start();// [6]\r\n    if (server.isStarted()) { // [7]\r\n        ...\r\n    }\r\n    \r\n    ...\r\n    server.shutdown();// [8]\r\n    \r\n1. First you need to create a `MessageFactory`\r\n2. Then you create a [`Iso8583Server`][Iso8583Server] providing `MessageFactory` and port to bind to \r\n3. Add one or more custom [`IsoMessageListener`][IsoMessageListener]s to handle `IsoMessage`s.\r\n4. Configure the server. You may omit this step if you're fine with default configuration.\r\n5. Initialize server. Now it is ready to start.\r\n6. Start server. Now it is ready to accept client connections.\r\n7. Verify that the server is started\r\n9. Shutdown server when you're done.\r\n\r\n## Logging\r\n\r\nDefault [`IsoMessageLoggingHandler`][IsoMessageLoggingHandler] may produce output like:\r\n\r\n    312 [nioEventLoopGroup-5-1] DEBUG IsoMessageLoggingHandler - [id: 0xa72cc005, /127.0.0.1:50853 => /127.0.0.1:9876] MTI: 0x0200\r\n      2: [Primary account number (PAN):NUMERIC(19)] = '000400*********0002'\r\n      3: [Processing code:NUMERIC(6)] = '650000'\r\n      7: [Transmission date & time:DATE10(10)] = '0720233443'\r\n      11: [System trace audit number:NUMERIC(6)] = '483248'\r\n      32: [Acquiring institution identification code:LLVAR(3)] = '456'\r\n      35: [Track 2 data:LLVAR(17)] = '***'\r\n      43: [Card acceptor name/location (1-23 address 24-36 city 37-38 state 39-40 country):ALPHA(40)] = 'SOLABTEST TEST-3 DF MX                  '\r\n      49: [Currency code, transaction:ALPHA(3)] = '484'\r\n      60: [Reserved national:LLLVAR(3)] = 'foo'\r\n      61: [Reserved private:LLLVAR(5)] = '1234P'\r\n      100: [Receiving institution identification code:LLVAR(3)] = '999'\r\n      102: [Account identification 1:LLVAR(4)] = 'ABCD'\r\n\r\nUsing client or server configurationYou may :\r\n\r\n- enable and disable printing of sensitive information, like PAN\r\n- customize which fields should be masked in logs\r\n- enable and disable printing field descriptions\r\n\r\nYou may provide your own logging handler and disable default one by using `org.jreactive.iso8583.ConnectorConfiguration.addLoggingHandler(boolean)` method and customizing ChannelPipeline.\r\n\r\n## ISO 8583 Links \r\n\r\n- Beginner's guide: http://www.lytsing.org/downloads/iso8583.pdf.\r\n- Introduction to ISO8583: http://www.codeproject.com/Articles/100084/Introduction-to-ISO-8583.\r\n\r\n[iso8583]: https://en.wikipedia.org/wiki/ISO_8583\r\n[iso-examples]: https://github.com/beckerdo/ISO-8583-Examples \"Some payments processing examples\"\r\n[j8583-example]: https://krishnarag.wordpress.com/2014/06/18/iso-8583-j8583-java-library/\r\n[j8583]: https://github.com/chochos/j8583 \"Java implementation of the ISO8583 protocol.\"\r\n[j8583-message-factory]: https://github.com/chochos/j8583/blob/master/src/main/java/com/solab/iso8583/IsoMessage.java\r\n[jpos]: http://jpos.org \r\n\r\n[Iso8583Client]: https://github.com/kpavlov/jreactive-8583/blob/master/src/main/java/org/jreactive/iso8583/client/Iso8583Client.java\r\n[Iso8583Server]: https://github.com/kpavlov/jreactive-8583/blob/master/src/main/java/org/jreactive/iso8583/server/Iso8583Server.java\r\n[IsoMessageListener]: https://github.com/kpavlov/jreactive-8583/blob/master/src/main/java/org/jreactive/iso8583/IsoMessageListener.java\r\n[IsoMessageLoggingHandler]: https://github.com/kpavlov/jreactive-8583/blob/master/src/main/java/org/jreactive/iso8583/netty/pipeline/IsoMessageLoggingHandler.java\r\n","google":"UA-2530248-20","note":"Don't delete this file! It's used internally to help with page regeneration."}